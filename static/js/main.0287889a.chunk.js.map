{"version":3,"sources":["redux/ducks/navslider.js","Components/Navbar.jsx","App.js","reportWebVitals.js","redux/configureStore.js","index.js"],"names":["OPEN_SLIDER","CLOSE_SLIDER","initialState","opened","handleSliderToggle","navsliderOpened","dispatch","console","log","type","payload","Navbar","useDispatch","useSelector","state","navslider","Fragment","className","href","size","style","cursor","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAAMA,EAAc,cACdC,EAAe,eAgBfC,EAAe,CACjBC,QAAQ,G,QCTCC,EAAqB,SAACC,EAAiBC,GAEhD,OADAC,QAAQC,IAAIH,GACaC,EAAlBD,EDDuB,CAC9BI,KAAMR,EACNS,QAAS,IAToB,CAC7BD,KAAMT,EACNU,QAAS,MC0CEC,EAjCA,WACX,IAAML,EAAWM,cACXP,EAAkBQ,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUZ,UAE7D,OACI,cAAC,IAAMa,SAAP,UACI,qBAAKC,UAAU,oEAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,sEAAf,UACI,qBAAKA,UAAU,mDAAf,SACI,mBAAGA,UAAU,kBAAkBC,KAAK,SAApC,oCAEJ,qBAAKD,UAAU,oBAAf,SACI,sBAAKA,UAAU,wCAAf,UACI,8BACI,mBAAGC,KAAK,aAAR,wBAEJ,8BACI,mBAAGA,KAAK,cAAR,+BAIZ,cAAC,IAAD,CAAiBC,KAAK,OAAOC,MAAO,CAAEC,OAAQ,WAAaJ,UAAU,mCACrEK,QAAS,kBAAMlB,EAAmBC,EAAiBC,kB,YCnBhEiB,MAZf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCCOO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCJRQ,EAAUC,YAAgB,CAC5BnB,UJiBW,WAAmC,IAAlCD,EAAiC,uDAAzBZ,EAAciC,EAAW,uCAC7C,OAAQA,EAAO1B,MACX,KAAKT,EACD,OAAO,2BAAKc,GAAZ,IAAmBX,QAAQ,IAC/B,KAAKF,EACD,OAAO,2BAAKa,GAAZ,IAAmBX,QAAQ,IAC/B,QACI,OAAOW,MInBJsB,EAFDC,YAAYJ,GCE1BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.0287889a.chunk.js","sourcesContent":["const OPEN_SLIDER = \"open_slider\";\r\nconst CLOSE_SLIDER = \"close_slider\";\r\n\r\nexport const openSlider = () => ({\r\n    type: OPEN_SLIDER,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nexport const closeSlider = () => ({\r\n    type: CLOSE_SLIDER,\r\n    payload: {\r\n\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    opened: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case OPEN_SLIDER:\r\n            return { ...state, opened: true };\r\n        case CLOSE_SLIDER:\r\n            return { ...state, opened: false };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from \"react\";\r\nimport \"./../css/bootstrap-grid.css\";\r\nimport \"./../css/base-styles.css\";\r\nimport \"./../css/navbar.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { openSlider, closeSlider } from \"./../redux/ducks/navslider\";\r\n\r\nimport { GiHamburgerMenu } from \"react-icons/gi\";\r\n\r\nexport const handleSliderToggle = (navsliderOpened, dispatch) => {\r\n    console.log(navsliderOpened);\r\n    return navsliderOpened ? dispatch(closeSlider()) : dispatch(openSlider());\r\n};\r\n\r\nconst Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const navsliderOpened = useSelector(state => state.navslider.opened);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <nav className=\"navbar navbar-expand-md container-fluid d-flex align-items-center\">\r\n                <div className=\"navbar-container container\">\r\n                    <div className=\"row navbar-row\">\r\n                        <div className=\"navbar-col col-12 d-flex justify-content-between align-items-center\">\r\n                            <div className=\"navbar-brand-container d-flex align-items-center\">\r\n                                <a className=\"navbar-brand h1\" href=\"#/home\">UPENN&nbsp;&times;&nbsp;STA</a>\r\n                            </div>\r\n                            <div className=\"d-none d-md-block\">\r\n                                <div className=\"navTo-group d-flex align-items-center\">\r\n                                    <div>\r\n                                        <a href=\"#/about-us\">About us</a>\r\n                                    </div>\r\n                                    <div>\r\n                                        <a href=\"#/our-works\"> Our works</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <GiHamburgerMenu size=\"2rem\" style={{ cursor: \"pointer\" }} className=\"navbar-toggler d-block d-md-none\" \r\n                            onClick={() => handleSliderToggle(navsliderOpened, dispatch)}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\n// import './App.css';\n\nimport Navbar from \"./Components/Navbar\";\nimport Navslider from \"./Components/Navslider\";\nimport MainContent from \"./Components/MainContent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar />\n        {/* <Navslider />\n        <MainContent /> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from \"redux\";\r\nimport navsliderReducer from \"./ducks/navslider\"\r\n\r\nconst reducer = combineReducers({\r\n    navslider: navsliderReducer\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/configureStore\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}